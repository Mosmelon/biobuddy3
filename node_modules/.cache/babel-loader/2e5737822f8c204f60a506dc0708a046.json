{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\Desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDB = require('node-themoviedb'); // ES6 Style\n// import MovieDB from 'node-themoviedb';\n\n\nconst mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options);\n\nconst getdatabase = async () => {\n  try {\n    const args = {\n      pathParameters: {\n        movie_id: 384018\n      }\n    };\n    const movie = await mdb.movie.getDetails(args);\n    console.log(movie);\n    /*\n      {\n        data: Object. Parsed json data of response\n        headers: Object. Headers of response\n      }\n    */\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nuseEffect(() => {\n  getdatabase();\n}, []);\nconst args = {\n  pathParameters: {// path parameters for query, i.e. tv_id\n  },\n  query: {// query string, i.e. session_id\n    // NOTE: api_key and language will be added to query by default, don't need specify these values\n  },\n  body: {// data for request body\n  }\n}; //const response = await mdb.tv.getVideos(args);\n// Or nested methods\n// const response = await mdb.tv.episode.rateTVEpisode(args);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Moa/Desktop/BioBuddy/BioBuddy/src/App.js"],"names":["useEffect","MovieDB","require","mdb","options","getdatabase","args","pathParameters","movie_id","movie","getDetails","console","log","error","query","body","App"],"mappings":";;AACA,OAAO,WAAP;AACA,SAAQA,SAAR,QAAwB,OAAxB;;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB,C,CACA;AACA;;;AACA,MAAMC,GAAG,GAAG,IAAIF,OAAJ,CAAY,kCAAZ,EAAgDG,OAAhD,CAAZ;;AACA,MAAMC,WAAW,GAAG,YAAa;AAC/B,MAAI;AACF,UAAMC,IAAI,GAAG;AACXC,MAAAA,cAAc,EAAE;AACdC,QAAAA,QAAQ,EAAE;AADI;AADL,KAAb;AAKA,UAAMC,KAAK,GAAG,MAAMN,GAAG,CAACM,KAAJ,CAAUC,UAAV,CAAqBJ,IAArB,CAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA;AACJ;AACA;AACA;AACA;AACA;AACG,GAdD,CAcE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF,CAlBD;;AAoBAb,SAAS,CAAC,MAAI;AACZK,EAAAA,WAAW;AAEZ,CAHQ,EAGP,EAHO,CAAT;AAIA,MAAMC,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAE,CACd;AADc,GADL;AAIXO,EAAAA,KAAK,EAAE,CACL;AACA;AAFK,GAJI;AAQXC,EAAAA,IAAI,EAAE,CACJ;AADI;AARK,CAAb,C,CAYA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useEffect} from 'react';\n\nconst MovieDB = require('node-themoviedb');\n// ES6 Style\n// import MovieDB from 'node-themoviedb';\nconst mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options);\nconst getdatabase = async () =>  {\n  try {\n    const args = {\n      pathParameters: {\n        movie_id: 384018,\n      },\n    };\n    const movie = await mdb.movie.getDetails(args);\n    console.log(movie);\n    /*\n      {\n        data: Object. Parsed json data of response\n        headers: Object. Headers of response\n      }\n    */\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nuseEffect(()=>{\n  getdatabase();\n\n},[])\nconst args = {\n  pathParameters: {\n    // path parameters for query, i.e. tv_id\n  },\n  query: {\n    // query string, i.e. session_id\n    // NOTE: api_key and language will be added to query by default, don't need specify these values\n  },\n  body: {\n    // data for request body\n  },\n};\n//const response = await mdb.tv.getVideos(args);\n// Or nested methods\n// const response = await mdb.tv.episode.rateTVEpisode(args);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}