{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { MovieControls } from \"./MovieControls\";\nimport Movie from \"../Api/Movie\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\nexport const MovieCard = _ref => {\n  _s();\n\n  let {\n    movie,\n    type\n  } = _ref;\n  const {\n    movieId\n  } = useParams();\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  useEffect(() => {\n    let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    fetchDetailInfo(endpointForMovieInfo);\n  }, []);\n\n  const fetchDetailInfo = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      console.log(result);\n      setMovie(result);\n      setLoadingForMovie(false);\n      let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      fetch(endpointForCasts).then(result => result.json()).then(result => {\n        console.log(result);\n        setCasts(result.cast);\n      });\n      setLoadingForCasts(false);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n      alt: `${movie.title} Poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieControls, {\n      type: type,\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"HVTbDqBF8xIs+zBkoFG79WAl1D0=\", true);\n\n_c = MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/MovieCard.js"],"names":["React","MovieControls","Movie","useState","useEffect","API_KEY","API_URL","IMG_API","MovieCard","movie","type","movieId","useParams","setMovie","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","endpointForMovieInfo","fetchDetailInfo","endpoint","fetch","then","result","json","console","log","endpointForCasts","cast","catch","error","poster_path","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,OAAO,GAAG,+BAAhB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAIA,OAAO,MAAMC,SAAS,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAoB;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAWC,SAAS,EAA1B;AACA,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIoB,oBAAoB,GAAI,GAAElB,OAAQ,SAAQK,OAAQ,YAAWN,OAAQ,iBAAzE;AACAoB,IAAAA,eAAe,CAACD,oBAAD,CAAf;AAGH,GANQ,EAMN,EANM,CAAT;;AAOA,QAAMC,eAAe,GAAIC,QAAD,IAAc;AAElCC,IAAAA,KAAK,CAACD,QAAD,CAAL,CACKE,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUC,MAAM,IAAI;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAhB,MAAAA,QAAQ,CAACgB,MAAD,CAAR;AACAV,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAEA,UAAIc,gBAAgB,GAAI,GAAE3B,OAAQ,SAAQK,OAAQ,oBAAmBN,OAAQ,EAA7E;AACAsB,MAAAA,KAAK,CAACM,gBAAD,CAAL,CACKL,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUC,MAAM,IAAI;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAd,QAAAA,QAAQ,CAACc,MAAM,CAACK,IAAR,CAAR;AACH,OALL;AAOAb,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAhBL,EAiBKc,KAjBL,CAiBWC,KAAK,IAAIL,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAjBpB;AAmBH,GArBD;;AAsBF,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,GAAG,EAAG,kCAAiC3B,KAAK,CAAC4B,WAAY,EAD3D;AAEE,MAAA,GAAG,EAAG,GAAE5B,KAAK,CAAC6B,KAAM;AAFtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE5B,IAArB;AAA2B,MAAA,KAAK,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhDM;;GAAMD,S;;KAAAA,S","sourcesContent":["import React from \"react\";\r\nimport { MovieControls } from \"./MovieControls\";\r\nimport Movie from \"../Api/Movie\";\r\nimport { useState, useEffect } from \"react\";\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n\r\n\r\nexport const MovieCard = ({ movie, type }) => {\r\n    const {movieId}= useParams();\r\n    const [Movie, setMovie] = useState([])\r\n    const [Casts, setCasts] = useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n    const [ActorToggle, setActorToggle] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n        fetchDetailInfo(endpointForMovieInfo)\r\n  \r\n  \r\n    }, [])\r\n    const fetchDetailInfo = (endpoint) => {\r\n\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setMovie(result)\r\n                setLoadingForMovie(false)\r\n  \r\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                fetch(endpointForCasts)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        console.log(result)\r\n                        setCasts(result.cast)\r\n                    })\r\n  \r\n                setLoadingForCasts(false)\r\n            })\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <div className=\"overlay\"></div>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n        alt={`${movie.title} Poster`}\r\n      />\r\n\r\n      <MovieControls type={type} movie={movie} />\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}