{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\Desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect } from 'react'; //const MovieDB = require('node-themoviedb');\n// ES6 Style\n// import MovieDB from 'node-themoviedb';\n//const mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getdatabase = async () => {\n  try {\n    const args = {\n      pathParameters: {\n        movie_id: 384018\n      }\n    };\n    const response = await window.fetch('https://api.themoviedb.org/3/movie/550?api_key=618a4d3048a1a1f797c014affaf110b4');\n    const movie = await response.data;\n    console.log(movie); // const movie = await mdb.movie.getDetails(args);\n    //console.log(movie);\n\n    /*\n      {\n        data: Object. Parsed json data of response\n        headers: Object. Headers of response\n      }\n    */\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst args = {\n  pathParameters: {// path parameters for query, i.e. tv_id\n  },\n  query: {// query string, i.e. session_id\n    // NOTE: api_key and language will be added to query by default, don't need specify these values\n  },\n  body: {// data for request body\n  }\n}; //const response = await mdb.tv.getVideos(args);\n// Or nested methods\n// const response = await mdb.tv.episode.rateTVEpisode(args);\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    getdatabase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Moa/Desktop/BioBuddy/BioBuddy/src/App.js"],"names":["useEffect","getdatabase","args","pathParameters","movie_id","response","window","fetch","movie","data","console","log","error","query","body","App"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAAQA,SAAR,QAAwB,OAAxB,C,CAEA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAG,YAAa;AAC/B,MAAI;AACF,UAAMC,IAAI,GAAG;AACXC,MAAAA,cAAc,EAAE;AACdC,QAAAA,QAAQ,EAAE;AADI;AADL,KAAb;AAMA,UAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAa,iFAAb,CAAvB;AACA,UAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EATE,CAUH;AACC;;AACA;AACJ;AACA;AACA;AACA;AACA;AACG,GAlBD,CAkBE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD;AACF,CAtBD;;AAyBA,MAAMV,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAE,CACd;AADc,GADL;AAIXU,EAAAA,KAAK,EAAE,CACL;AACA;AAFK,GAJI;AAQXC,EAAAA,IAAI,EAAE,CACJ;AADI;AARK,CAAb,C,CAYA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEff,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,WAAW;AAEZ,GAHQ,EAGP,EAHO,CAAT;AAKE,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAZQc,G;;KAAAA,G;AAcT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useEffect} from 'react';\n\n//const MovieDB = require('node-themoviedb');\n// ES6 Style\n// import MovieDB from 'node-themoviedb';\n//const mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options);\nconst getdatabase = async () =>  {\n  try {\n    const args = {\n      pathParameters: {\n        movie_id: 384018,\n      },\n    };\n\n    const response = await window.fetch('https://api.themoviedb.org/3/movie/550?api_key=618a4d3048a1a1f797c014affaf110b4');\n    const movie = await response.data;\n    console.log(movie);\n   // const movie = await mdb.movie.getDetails(args);\n    //console.log(movie);\n    /*\n      {\n        data: Object. Parsed json data of response\n        headers: Object. Headers of response\n      }\n    */\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\nconst args = {\n  pathParameters: {\n    // path parameters for query, i.e. tv_id\n  },\n  query: {\n    // query string, i.e. session_id\n    // NOTE: api_key and language will be added to query by default, don't need specify these values\n  },\n  body: {\n    // data for request body\n  },\n};\n//const response = await mdb.tv.getVideos(args);\n// Or nested methods\n// const response = await mdb.tv.episode.rateTVEpisode(args);\n\nfunction App() {\n\nuseEffect(()=>{\n  getdatabase();\n\n},[])\n\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}