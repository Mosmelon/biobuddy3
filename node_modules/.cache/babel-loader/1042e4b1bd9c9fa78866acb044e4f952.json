{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\Desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDB = require('node-themoviedb'); // ES6 Style\n// import MovieDB from 'node-themoviedb';\n\n\nconst mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options); // (async () => {\n//   try {\n//     const args = {\n//       pathParameters: {\n//         movie_id: 384018,\n//       },\n//     };\n//     const movie = await mdb.movie.getDetails(args);\n//     console.log(movie);\n//     /*\n//       {\n//         data: Object. Parsed json data of response\n//         headers: Object. Headers of response\n//       }\n//     */\n//   } catch (error) {\n//     console.error(error);\n//   }\n// })();\n// const args = {\n//   pathParameters: {\n//     // path parameters for query, i.e. tv_id\n//   },\n//   query: {\n//     // query string, i.e. session_id\n//     // NOTE: api_key and language will be added to query by default, don't need specify these values\n//   },\n//   body: {\n//     // data for request body\n//   },\n// };\n// const response = await mdb.tv.getVideos(args);\n// // Or nested methods\n// // const response = await mdb.tv.episode.rateTVEpisode(args);\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieID: 157336 // set initital load movie - Interstellar\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        fetchMovieID: this.fetchMovieID.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } // END render\n  // the api request function\n\n\n  fetchApi(url) {\n    fetch(url).then(res => res.json()).then(data => {\n      // update state with API data\n      this.setState({\n        movieID: data.id,\n        original_title: data.original_title,\n        tagline: data.tagline,\n        overview: data.overview,\n        homepage: data.homepage,\n        poster: data.poster_path,\n        production: data.production_companies,\n        production_countries: data.production_countries,\n        genre: data.genres,\n        release: data.release_date,\n        vote: data.vote_average,\n        runtime: data.runtime,\n        revenue: data.revenue,\n        backdrop: data.backdrop_path\n      });\n    }); // .catch((err) => console.log('Movie not found!'))\n  } // end function\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Moa/Desktop/BioBuddy/BioBuddy/src/App.js"],"names":["MovieDB","require","mdb","options","App","Component","constructor","props","state","movieID","render","fetchMovieID","bind","fetchApi","url","fetch","then","res","json","data","setState","id","original_title","tagline","overview","homepage","poster","poster_path","production","production_companies","production_countries","genre","genres","release","release_date","vote","vote_average","runtime","revenue","backdrop","backdrop_path"],"mappings":";;AACA,OAAO,WAAP;;;AAGA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB,C,CACA;AACA;;;AACA,MAAMC,GAAG,GAAG,IAAIF,OAAJ,CAAY,kCAAZ,EAAgDG,OAAhD,CAAZ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAC1BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,MADE,CACK;;AADL,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAfyB,CAexB;AAEF;;;AACAK,EAAAA,QAAQ,CAACC,GAAD,EAAM;AAEZC,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,EAAqCF,IAArC,CAA2CG,IAAD,IAAU;AAClD;AACA,WAAKC,QAAL,CAAc;AACZX,QAAAA,OAAO,EAAEU,IAAI,CAACE,EADF;AAEZC,QAAAA,cAAc,EAAEH,IAAI,CAACG,cAFT;AAGZC,QAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHF;AAIZC,QAAAA,QAAQ,EAAEL,IAAI,CAACK,QAJH;AAKZC,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QALH;AAMZC,QAAAA,MAAM,EAAEP,IAAI,CAACQ,WAND;AAOZC,QAAAA,UAAU,EAAET,IAAI,CAACU,oBAPL;AAQZC,QAAAA,oBAAoB,EAAEX,IAAI,CAACW,oBARf;AASZC,QAAAA,KAAK,EAAEZ,IAAI,CAACa,MATA;AAUZC,QAAAA,OAAO,EAAEd,IAAI,CAACe,YAVF;AAWZC,QAAAA,IAAI,EAAEhB,IAAI,CAACiB,YAXC;AAYZC,QAAAA,OAAO,EAAElB,IAAI,CAACkB,OAZF;AAaZC,QAAAA,OAAO,EAAEnB,IAAI,CAACmB,OAbF;AAcZC,QAAAA,QAAQ,EAAEpB,IAAI,CAACqB;AAdH,OAAd;AAiBD,KAnBD,EAFY,CAuBZ;AAED,GA3CyB,CA2CxB;;;AA3CwB;;AA6C5B,eAAepC,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\n\nconst MovieDB = require('node-themoviedb');\n// ES6 Style\n// import MovieDB from 'node-themoviedb';\nconst mdb = new MovieDB('618a4d3048a1a1f797c014affaf110b4', options);\n\n// (async () => {\n//   try {\n//     const args = {\n//       pathParameters: {\n//         movie_id: 384018,\n//       },\n//     };\n//     const movie = await mdb.movie.getDetails(args);\n//     console.log(movie);\n//     /*\n//       {\n//         data: Object. Parsed json data of response\n//         headers: Object. Headers of response\n//       }\n//     */\n//   } catch (error) {\n//     console.error(error);\n//   }\n// })();\n\n// const args = {\n//   pathParameters: {\n//     // path parameters for query, i.e. tv_id\n//   },\n//   query: {\n//     // query string, i.e. session_id\n//     // NOTE: api_key and language will be added to query by default, don't need specify these values\n//   },\n//   body: {\n//     // data for request body\n//   },\n// };\n// const response = await mdb.tv.getVideos(args);\n// // Or nested methods\n// // const response = await mdb.tv.episode.rateTVEpisode(args);\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n\n  \n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      movieID: 157336 // set initital load movie - Interstellar\n    }\n  }\n  render() {\n    return (\n      <div>\n        <SearchBox fetchMovieID={this.fetchMovieID.bind(this)}/>\n        <Card data={this.state}/>\n      </div>\n    )\n  } // END render\n\n  // the api request function\n  fetchApi(url) {\n\n    fetch(url).then((res) => res.json()).then((data) => {\n      // update state with API data\n      this.setState({\n        movieID: data.id,\n        original_title: data.original_title,\n        tagline: data.tagline,\n        overview: data.overview,\n        homepage: data.homepage,\n        poster: data.poster_path,\n        production: data.production_companies,\n        production_countries: data.production_countries,\n        genre: data.genres,\n        release: data.release_date,\n        vote: data.vote_average,\n        runtime: data.runtime,\n        revenue: data.revenue,\n        backdrop: data.backdrop_path\n\n      })\n    })\n\n    // .catch((err) => console.log('Movie not found!'))\n\n  } // end function\n} \nexport default App;\n"]},"metadata":{},"sourceType":"module"}