{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\Movieinfo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Movie from '../Api/Movie';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from './GlobalState';\nimport ReactDOM from \"react-dom\";\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\nimport Home from './Homepage';\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport image1 from '../plus.png';\nimport { Link } from 'react-router-dom'; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst setVoteClass = vote => {// if(vote>= 8){\n  //     return 'green';\n  // }\n  // else if (vote>=6){\n  //     return 'orange';\n  // }else{\n  //     return 'red';\n  // }\n};\n\nexport const MovieInfo = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const {\n    movieId\n  } = useParams();\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  const movieVariable = {\n    movieId: movieId\n  };\n  useEffect(() => {\n    let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    fetchDetailInfo(endpointForMovieInfo);\n  }, []);\n\n  const toggleActorView = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  const fetchDetailInfo = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      console.log(result);\n      setMovie(result);\n      setLoadingForMovie(false);\n      let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      fetch(endpointForCasts).then(result => result.json()).then(result => {\n        console.log(result);\n        setCasts(result.cast);\n      });\n      setLoadingForCasts(false);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchlist,\n    watched\n  } = useContext(GlobalContext);\n  let storedMovie = watchlist.find(o => o.id === Movie.id);\n  let storedMovieWatched = watched.find(o => o.id === Movie.id);\n  const watchlistDisabled = storedMovie ? true : storedMovieWatched ? true : false;\n  const watchedDisabled = storedMovieWatched ? true : false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: IMG_API + '/' + Movie.poster_path,\n        alt: Movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aboutmovie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imginfo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: IMG_API + '/' + Movie.poster_path,\n            alt: Movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: Movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"PLOT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: Movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addbutton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              disabled: watchlistDisabled,\n              onClick: () => addMovieToWatchlist(Movie),\n              children: \"Add to Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/mylist/`,\n              children: \" Mylist \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/Recomendmovie/${Movie.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"plus\",\n                src: image1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 52\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-directors\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"RATING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score\",\n                children: Movie.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MovieInfo, \"DfU27k2BzaMThrf7Hwfm8JvY3q0=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieInfo;\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/Movieinfo.js"],"names":["Movie","React","useContext","useEffect","useState","GlobalContext","ReactDOM","fetchMovies","fetchMovieDetail","Home","axios","useParams","image1","Link","IMG_API","FEATURED_API","IMAGE_API","SEARCH_API","GENRE_API","API_KEY","API_URL","setVoteClass","vote","MovieInfo","movie","movieId","setMovie","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","movieVariable","endpointForMovieInfo","fetchDetailInfo","toggleActorView","endpoint","fetch","then","result","json","console","log","endpointForCasts","cast","catch","error","addMovieToWatchlist","addMovieToWatched","watchlist","watched","storedMovie","find","o","id","storedMovieWatched","watchlistDisabled","watchedDisabled","poster_path","title","overview","vote_average"],"mappings":"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","sourcesContent":["\r\nimport '../App.css';\r\nimport Movie from '../Api/Movie';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport { GlobalContext } from './GlobalState';\r\nimport ReactDOM from \"react-dom\";\r\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\r\nimport Home from './Homepage';\r\n\r\nimport axios from 'axios';\r\nimport {useParams} from \"react-router-dom\"\r\nimport image1 from '../plus.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import axios from 'axios';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\r\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\"\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\n\r\n\r\nconst setVoteClass = (vote) => {\r\n    // if(vote>= 8){\r\n    //     return 'green';\r\n    // }\r\n    // else if (vote>=6){\r\n    //     return 'orange';\r\n\r\n    // }else{\r\n    //     return 'red';\r\n    // }\r\n}\r\n\r\nexport const MovieInfo= ({movie}) => {\r\n  const {movieId} = useParams();\r\n  const [Movie, setMovie] = useState([])\r\n  const [Casts, setCasts] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n  const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n  const [ActorToggle, setActorToggle] = useState(false)\r\n  const movieVariable = {\r\n      movieId: movieId\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n      let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n      fetchDetailInfo(endpointForMovieInfo)\r\n\r\n\r\n  }, [])\r\n\r\n  const toggleActorView = () => {\r\n      setActorToggle(!ActorToggle)\r\n  }\r\n\r\n  const fetchDetailInfo = (endpoint) => {\r\n\r\n      fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n              console.log(result)\r\n              setMovie(result)\r\n              setLoadingForMovie(false)\r\n\r\n              let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n              fetch(endpointForCasts)\r\n                  .then(result => result.json())\r\n                  .then(result => {\r\n                      console.log(result)\r\n                      setCasts(result.cast)\r\n                  })\r\n\r\n              setLoadingForCasts(false)\r\n          })\r\n          .catch(error => console.error('Error:', error)\r\n          )\r\n  }\r\n  \r\n      \r\n  const {\r\n    addMovieToWatchlist,\r\n    addMovieToWatched,\r\n    watchlist,\r\n    watched,\r\n  } = useContext(GlobalContext);\r\n  let storedMovie = watchlist.find((o) => o.id === Movie.id);\r\n  let storedMovieWatched = watched.find((o) => o.id === Movie.id);\r\n\r\n  const watchlistDisabled = storedMovie\r\n    ? true\r\n    : storedMovieWatched\r\n    ? true\r\n    : false;\r\n\r\n  const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n  return(\r\n    <><div className=\"background\">\r\n      <img src={IMG_API + '/' + Movie.poster_path} alt={Movie.title} />\r\n   \r\n    <div className=\"aboutmovie\">\r\n\r\n\r\n        <div className=\"imginfo\">\r\n          <img src={IMG_API + '/' + Movie.poster_path} alt={Movie.title} />\r\n        </div>\r\n        <div className=\"movie-info2\">\r\n\r\n          <h3>{Movie.title}</h3>\r\n\r\n          <h4>PLOT</h4>\r\n          <p>{Movie.overview}</p>\r\n          <div className=\"addbutton\">\r\n            <button\r\n              className=\"btn\"\r\n              disabled={watchlistDisabled}\r\n              onClick={() => addMovieToWatchlist(Movie)}>\r\n              Add to Watchlist\r\n            </button>\r\n            <a href={`/mylist/`}> Mylist </a>\r\n            <a href={`/Recomendmovie/${Movie.id}`}><img alt=\"plus\" src={image1} /> </a>\r\n          </div>\r\n          <div className='rating-directors'>\r\n            <div>\r\n              <h3>RATING</h3>\r\n              <div className='score'>{Movie.vote_average}</div>\r\n            </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div></>\r\n    \r\n\r\n\r\n  );\r\n\r\n}\r\nexport default MovieInfo;\r\n"]},"metadata":{},"sourceType":"module"}