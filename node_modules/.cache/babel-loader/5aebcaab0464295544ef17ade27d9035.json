{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\Movieinfo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Movie from '../Api/Movie';\nimport React, { useEffect, useState, useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\nimport Home from './Homepage';\nimport { GlobalContext } from './GlobalState';\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport image1 from '../plus.png';\nimport { Link } from 'react-router-dom';\nimport { WatchList } from './Myprofile';\nimport MovieExtra from './Movieextra';\nimport { MovieControls } from './MovieControls'; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst setVoteClass = vote => {// if(vote>= 8){\n  //     return 'green';\n  // }\n  // else if (vote>=6){\n  //     return 'orange';\n  // }else{\n  //     return 'red';\n  // }\n};\n\nexport const MovieInfo = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [Loading, setLoading] = useState(true);\n  const [CurrentPage, setCurrentPage] = useState(0);\n\n  const toggleActorView = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  useEffect(() => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n\n  const fetchMovies = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      setMovies([...movies, ...result.results]);\n      setMainMovieImage(MainMovieImage || result.results[0]);\n      setCurrentPage(result.page);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  const {\n    movieinfo\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutmovie\",\n      children: movieinfo.map(movie => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(MovieExtra, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 68\n        }, this), \" \"]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 6\n  }, this);\n}; // <>\n// <div className=\"aboutmovie\">\n//     <img src={IMG_API + '/'+  poster_path} alt={title} />\n//     <div className=\"movie-info2\">\n//         <h3>{title}</h3>\n//         <span className={`tag ${setVoteClass(vote_average)}`}>\n//             {vote_average}</span>\n//     </div>\n// </div></>\n\n_s(MovieInfo, \"K/8rS+SozoDvhPq3+IV1CJJ8DOw=\");\n\n_c = MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/Movieinfo.js"],"names":["Movie","React","useEffect","useState","useContext","ReactDOM","fetchMovies","fetchMovieDetail","Home","GlobalContext","axios","useParams","image1","Link","WatchList","MovieExtra","MovieControls","IMG_API","FEATURED_API","IMAGE_API","SEARCH_API","GENRE_API","API_KEY","API_URL","setVoteClass","vote","MovieInfo","movie","movies","setMovies","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","MainMovieImage","setMainMovieImage","Loading","setLoading","CurrentPage","setCurrentPage","toggleActorView","endpoint","fetch","then","result","json","results","page","catch","error","console","movieinfo","map","id"],"mappings":"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","sourcesContent":["\r\nimport '../App.css';\r\nimport Movie from '../Api/Movie';\r\nimport React, {useEffect, useState, useContext} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\r\nimport Home from './Homepage';\r\nimport { GlobalContext } from './GlobalState';\r\n\r\nimport axios from 'axios';\r\nimport {useParams} from \"react-router-dom\"\r\nimport image1 from '../plus.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { WatchList } from './Myprofile';\r\nimport MovieExtra from './Movieextra';\r\nimport { MovieControls } from './MovieControls';\r\n\r\n//import axios from 'axios';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\r\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\"\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\n\r\n\r\nconst setVoteClass = (vote) => {\r\n    // if(vote>= 8){\r\n    //     return 'green';\r\n    // }\r\n    // else if (vote>=6){\r\n    //     return 'orange';\r\n\r\n    // }else{\r\n    //     return 'red';\r\n    // }\r\n}\r\n\r\nexport const MovieInfo = ({movie}) =>{\r\n\r\n  const [movies, setMovies] = useState([])\r\n  const [Casts, setCasts] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n  const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n  const [ActorToggle, setActorToggle] = useState(false)\r\n  const [MainMovieImage, setMainMovieImage] = useState(null)\r\n  const [Loading, setLoading] = useState(true)\r\n  const [CurrentPage, setCurrentPage] = useState(0)\r\n\r\n  const toggleActorView = () => {\r\n      setActorToggle(!ActorToggle)\r\n  }\r\n  useEffect(() => {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    fetchMovies(endpoint)\r\n}, [])\r\n\r\nconst fetchMovies = (endpoint) => {\r\n\r\n  fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n          setMovies([...movies, ...result.results])\r\n          setMainMovieImage(MainMovieImage || result.results[0])\r\n          setCurrentPage(result.page)\r\n      }, )\r\n      .catch(error => console.error('Error:', error)\r\n      )\r\n}\r\nconst { movieinfo } = useContext(GlobalContext);\r\n\r\n\r\n\r\n  return(\r\n     <div className=\"background\" >\r\n      \r\n    <div className=\"aboutmovie\">\r\n         \r\n         {movieinfo.map((movie) => <React.Fragment key={movie.id}> <MovieExtra movie={movie}/> </React.Fragment>)}\r\n\r\n                    \r\n                   {/* <p>{movie.overview}</p>\r\n                  \r\n                 <span className={`tag ${setVoteClass(movie.vote_average)}`}>\r\n                \r\n                       {movie.vote_average}</span>\r\n                       <a href={`/Recomendmovie/${movie.id}`}><img alt=\"plus\" src={image1} /> </a> */}\r\n                       \r\n                </div>\r\n                \r\n\r\n    </div>\r\n    \r\n  \r\n        \r\n        );\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n// <>\r\n            // <div className=\"aboutmovie\">\r\n\r\n            //     <img src={IMG_API + '/'+  poster_path} alt={title} />\r\n            //     <div className=\"movie-info2\">\r\n\r\n            //         <h3>{title}</h3>\r\n            //         <span className={`tag ${setVoteClass(vote_average)}`}>\r\n            //             {vote_average}</span>\r\n            //     </div>\r\n\r\n            // </div></>"]},"metadata":{},"sourceType":"module"}