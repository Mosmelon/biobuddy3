{"ast":null,"code":"import axios from 'axios';\nconst apiKey = '618a4d3048a1a1f797c014affaf110b4';\nconst url = 'https://api.themoviedb.org/3';\nconst nowPlayingUrl = `${url}/movie/now_playing`;\nconst topratedUrl = `${url}/movie/top_rated`;\nconst movieUrl = `${url}/movie`;\nconst genreUrl = `${url}/genre/movie/list`;\nconst moviesUrl = `${url}/discover/movie`;\nconst personUrl = `${url}/trending/person/week`;\nexport const fetchMovies = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(nowPlayingUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en_US',\n        page: 1\n      }\n    });\n    const posterUrl = 'https://image.tmdb.org/t/p/original/';\n    const modifiedData = data['results'].map(m => ({\n      id: m['id'],\n      backPoster: posterUrl + m['backdrop_path'],\n      popularity: m['popularith'],\n      title: m['title'],\n      poster: posterUrl + m['poster_path'],\n      overview: m['overview'],\n      rating: m['vote_average']\n    }));\n    return modifiedData;\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/Moa/Desktop/BioBuddy/BioBuddy/src/getdetail.js"],"names":["axios","apiKey","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","personUrl","fetchMovies","data","get","params","api_key","language","page","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","error"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AACA,MAAMC,GAAG,GAAG,8BAAZ;AACA,MAAMC,aAAa,GAAI,GAAED,GAAI,oBAA7B;AACA,MAAME,WAAW,GAAI,GAAEF,GAAI,kBAA3B;AACA,MAAMG,QAAQ,GAAI,GAAEH,GAAI,QAAxB;AACA,MAAMI,QAAQ,GAAI,GAAEJ,GAAI,mBAAxB;AACA,MAAMK,SAAS,GAAI,GAAEL,GAAI,iBAAzB;AACA,MAAMM,SAAS,GAAI,GAAEN,GAAI,uBAAzB;AAGA,OAAO,MAAMO,WAAW,GAAG,YAAY;AACnC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAUR,aAAV,EAAyB;AAC5CS,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAEZ,MADL;AAEJa,QAAAA,QAAQ,EAAE,OAFN;AAGJC,QAAAA,IAAI,EAAE;AAHF;AADoC,KAAzB,CAAvB;AAQA,UAAMC,SAAS,GAAG,sCAAlB;AACA,UAAMC,YAAY,GAAGP,IAAI,CAAC,SAAD,CAAJ,CAAgBQ,GAAhB,CAAqBC,CAAD,KAAQ;AAC7CC,MAAAA,EAAE,EAAED,CAAC,CAAC,IAAD,CADwC;AAE7CE,MAAAA,UAAU,EAAEL,SAAS,GAAGG,CAAC,CAAC,eAAD,CAFoB;AAG7CG,MAAAA,UAAU,EAAEH,CAAC,CAAC,YAAD,CAHgC;AAI7CI,MAAAA,KAAK,EAAEJ,CAAC,CAAC,OAAD,CAJqC;AAK7CK,MAAAA,MAAM,EAAER,SAAS,GAAGG,CAAC,CAAC,aAAD,CALwB;AAM7CM,MAAAA,QAAQ,EAAEN,CAAC,CAAC,UAAD,CANkC;AAO7CO,MAAAA,MAAM,EAAEP,CAAC,CAAC,cAAD;AAPoC,KAAR,CAApB,CAArB;AAUA,WAAOF,YAAP;AACH,GArBD,CAqBE,OAAOU,KAAP,EAAc,CAAG;AACtB,CAvBM","sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst apiKey = '618a4d3048a1a1f797c014affaf110b4';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topratedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl = `${url}/movie`;\r\nconst genreUrl = `${url}/genre/movie/list`;\r\nconst moviesUrl = `${url}/discover/movie`;\r\nconst personUrl = `${url}/trending/person/week`;\r\n\r\n\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}