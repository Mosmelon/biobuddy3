{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\WatchList.js\",\n    _s = $RefreshSig$();\n\nimport \"../Css/Prof.css\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Movie from \"../Api/Movie\";\nimport { MovieCard } from \"./MovieCard\";\nimport { GlobalContext } from \"./GlobalState\";\nimport image1 from '../Home.png';\nimport image2 from '../Search.png';\nimport image3 from '../chat.png';\nimport image4 from '../user.png';\nimport { MovieInfo } from \"./Movieinfo\"; //import image from './IMG_6793.jpeg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280\";\nexport const Watchlist = props => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  useEffect(() => {\n    let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    fetchDetailInfo(endpointForMovieInfo);\n  }, []);\n\n  const fetchDetailInfo = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      console.log(result);\n      setMovie(result);\n      setLoadingForMovie(false);\n      let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      fetch(endpointForCasts).then(result => result.json()).then(result => {\n        console.log(result);\n        setCasts(result.cast);\n      });\n      setLoadingForCasts(false);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  const {\n    watchlist\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"My Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count-pill\",\n          children: [watchlist.length, \" \", watchlist.length === 1 ? \"Movie\" : \"Movies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), watchlist.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid\",\n        children: watchlist.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie.id,\n          type: movie,\n          type: \"watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"no-movies\",\n        children: \"No movies in your list! Add some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Watchlist, \"mUOtCCQ4tYAQ2GoqMVaTRFVpmqc=\", false, function () {\n  return [useParams];\n});\n\n_c = Watchlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/WatchList.js"],"names":["React","useContext","useState","useEffect","useParams","Link","Movie","MovieCard","GlobalContext","image1","image2","image3","image4","MovieInfo","API_KEY","API_URL","IMAGE_API","Watchlist","props","movieId","setMovie","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","endpointForMovieInfo","fetchDetailInfo","endpoint","fetch","then","result","json","console","log","endpointForCasts","cast","catch","error","watchlist","length","map","movie","id"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport \"../Css/Prof.css\";\r\nimport React, {useContext, useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from \"../Api/Movie\";\r\nimport { MovieCard } from \"./MovieCard\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport image1 from '../Home.png';\r\nimport image2 from '../Search.png';\r\nimport image3 from '../chat.png';\r\nimport image4 from '../user.png';\r\nimport { MovieInfo } from \"./Movieinfo\";\r\n\r\n//import image from './IMG_6793.jpeg';\r\n\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280\";\r\nexport const Watchlist = (props) => {\r\n    const {movieId}= useParams();\r\n    const [Movie, setMovie] = useState([])\r\n    const [Casts, setCasts] = useState([])\r\n    const [CommentLists, setCommentLists] = useState([])\r\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n    const [ActorToggle, setActorToggle] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n        fetchDetailInfo(endpointForMovieInfo)\r\n  \r\n  \r\n    }, [])\r\n    const fetchDetailInfo = (endpoint) => {\r\n\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setMovie(result)\r\n                setLoadingForMovie(false)\r\n  \r\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n                fetch(endpointForCasts)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        console.log(result)\r\n                        setCasts(result.cast)\r\n                    })\r\n  \r\n                setLoadingForCasts(false)\r\n            })\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n  \r\n    const { watchlist } = useContext(GlobalContext);\r\n    return (\r\n      <div className=\"movie-page\">\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <h1 className=\"heading\">My Watchlist</h1>\r\n            <span className=\"count-pill\">\r\n              {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\r\n            </span>\r\n          </div>\r\n  \r\n         \r\n        {watchlist.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watchlist.map((movie) => (\r\n              <MovieCard movie={movie.id} type={movie} type=\"watchlist\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\r\n        )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}