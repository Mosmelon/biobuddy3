{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\Movieinfo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Movie from '../Api/Movie';\nimport React, { useEffect, useState, useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\nimport Home from './Homepage';\nimport { GlobalContext } from './GlobalState';\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport image1 from '../plus.png';\nimport { Link } from 'react-router-dom';\nimport { WatchList } from './Myprofile';\nimport MovieExtra from './Movieextra'; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst setVoteClass = vote => {// if(vote>= 8){\n  //     return 'green';\n  // }\n  // else if (vote>=6){\n  //     return 'orange';\n  // }else{\n  //     return 'red';\n  // }\n};\n\nexport const MovieInfo = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  useEffect(() => {\n    let endpointForMovieInfo = `${API_URL}movie/${movie.id}?api_key=${API_KEY}&language=en-US`;\n    fetchDetailInfo(endpointForMovieInfo);\n  }, []);\n\n  const toggleActorView = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  const fetchDetailInfo = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      console.log(result);\n      setMovie(result);\n      setLoadingForMovie(false);\n      let endpointForCasts = `${API_URL}movie/${movie.id}/credits?api_key=${API_KEY}`;\n      fetch(endpointForCasts).then(result => result.json()).then(result => {\n        console.log(result);\n        setCasts(result.cast);\n      });\n      setLoadingForCasts(false);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchlist,\n    watched\n  } = useContext(GlobalContext); // let storedMovie = watchlist.find((o) => o.id === movie.id);\n  // let storedMovieWatched = watched.find((o) => o.id === movie.id);\n  // const watchlistDisabled = storedMovie\n  //   ? true\n  //   : storedMovieWatched\n  //   ? true\n  //   : false;\n  // const watchedDisabled = storedMovieWatched ? true : false;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutmovie\",\n      children: [/*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\" //disabled={watchlistDisabled}\n          ,\n          onClick: () => addMovieToWatchlist(movie),\n          children: \"Add to Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/mylist/`,\n          children: \" Mylist \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 6\n  }, this);\n}; // <>\n// <div className=\"aboutmovie\">\n//     <img src={IMG_API + '/'+  poster_path} alt={title} />\n//     <div className=\"movie-info2\">\n//         <h3>{title}</h3>\n//         <span className={`tag ${setVoteClass(vote_average)}`}>\n//             {vote_average}</span>\n//     </div>\n// </div></>\n\n_s(MovieInfo, \"jCyv0ztPHXx69FA+oo0NlGkSVpE=\");\n\n_c = MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/Movieinfo.js"],"names":["Movie","React","useEffect","useState","useContext","ReactDOM","fetchMovies","fetchMovieDetail","Home","GlobalContext","axios","useParams","image1","Link","WatchList","MovieExtra","IMG_API","FEATURED_API","IMAGE_API","SEARCH_API","GENRE_API","API_KEY","API_URL","setVoteClass","vote","MovieInfo","movie","setMovie","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","endpointForMovieInfo","id","fetchDetailInfo","toggleActorView","endpoint","fetch","then","result","json","console","log","endpointForCasts","cast","catch","error","addMovieToWatchlist","addMovieToWatched","watchlist","watched"],"mappings":"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","sourcesContent":["\r\nimport '../App.css';\r\nimport Movie from '../Api/Movie';\r\nimport React, {useEffect, useState, useContext} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\r\nimport Home from './Homepage';\r\nimport { GlobalContext } from './GlobalState';\r\n\r\nimport axios from 'axios';\r\nimport {useParams} from \"react-router-dom\"\r\nimport image1 from '../plus.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { WatchList } from './Myprofile';\r\nimport MovieExtra from './Movieextra';\r\n\r\n//import axios from 'axios';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\r\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\"\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\n\r\n\r\nconst setVoteClass = (vote) => {\r\n    // if(vote>= 8){\r\n    //     return 'green';\r\n    // }\r\n    // else if (vote>=6){\r\n    //     return 'orange';\r\n\r\n    // }else{\r\n    //     return 'red';\r\n    // }\r\n}\r\n\r\nexport const MovieInfo = ({movie}) =>{\r\n\r\n  const [Movie, setMovie] = useState([])\r\n  const [Casts, setCasts] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n  const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n  const [ActorToggle, setActorToggle] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n      let endpointForMovieInfo = `${API_URL}movie/${movie.id}?api_key=${API_KEY}&language=en-US`;\r\n      fetchDetailInfo(endpointForMovieInfo)\r\n\r\n\r\n  }, [])\r\n\r\n  const toggleActorView = () => {\r\n      setActorToggle(!ActorToggle)\r\n  }\r\n\r\n  const fetchDetailInfo = (endpoint) => {\r\n\r\n      fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n              console.log(result)\r\n              setMovie(result)\r\n              setLoadingForMovie(false)\r\n\r\n              let endpointForCasts = `${API_URL}movie/${movie.id}/credits?api_key=${API_KEY}`;\r\n              fetch(endpointForCasts)\r\n                  .then(result => result.json())\r\n                  .then(result => {\r\n                      console.log(result)\r\n                      setCasts(result.cast)\r\n                  })\r\n\r\n              setLoadingForCasts(false)\r\n          })\r\n          .catch(error => console.error('Error:', error)\r\n          )\r\n  }\r\n  const {\r\n    addMovieToWatchlist,\r\n    addMovieToWatched,\r\n    watchlist,\r\n    watched,\r\n  } = useContext(GlobalContext);\r\n\r\n  // let storedMovie = watchlist.find((o) => o.id === movie.id);\r\n  // let storedMovieWatched = watched.find((o) => o.id === movie.id);\r\n\r\n  // const watchlistDisabled = storedMovie\r\n  //   ? true\r\n  //   : storedMovieWatched\r\n  //   ? true\r\n  //   : false;\r\n\r\n  // const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n  return(\r\n     <div className=\"background\" >\r\n      \r\n    <div className=\"aboutmovie\">\r\n         \r\n\r\n             <Movie movie={movie}/>\r\n                   <div className=\"controls\">\r\n              <button\r\n                className=\"btn\"\r\n                //disabled={watchlistDisabled}\r\n                onClick={() => addMovieToWatchlist(movie)}\r\n              >\r\n              Add to Watchlist\r\n            </button>\r\n                    <a href={`/mylist/`}> Mylist </a>\r\n                   {/* <p>{movie.overview}</p>\r\n                  \r\n                 <span className={`tag ${setVoteClass(movie.vote_average)}`}>\r\n                \r\n                       {movie.vote_average}</span>\r\n                       <a href={`/Recomendmovie/${movie.id}`}><img alt=\"plus\" src={image1} /> </a> */}\r\n                       \r\n                </div>\r\n                \r\n\r\n    </div>\r\n    </div>\r\n  \r\n        \r\n        );\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n// <>\r\n            // <div className=\"aboutmovie\">\r\n\r\n            //     <img src={IMG_API + '/'+  poster_path} alt={title} />\r\n            //     <div className=\"movie-info2\">\r\n\r\n            //         <h3>{title}</h3>\r\n            //         <span className={`tag ${setVoteClass(vote_average)}`}>\r\n            //             {vote_average}</span>\r\n            //     </div>\r\n\r\n            // </div></>"]},"metadata":{},"sourceType":"module"}