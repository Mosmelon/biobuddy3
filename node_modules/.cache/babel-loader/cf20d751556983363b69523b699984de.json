{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\Movieinfo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { Movie } from '../Api/Movie';\nimport React, { useEffect, useState } from 'react';\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\nimport { BrowserRouter as Router, Routes, Route, Link, useRouteMatch, useParams } from \"react-router-dom\"; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\";\nconst APIKey = '618a4d3048a1a1f797c014affaf110b4';\n\nconst setVoteClass = vote => {// if(vote>= 8){\n  //     return 'green';\n  // }\n  // else if (vote>=6){\n  //     return 'orange';\n  // }else{\n  //     return 'red';\n  // }\n};\n\nconst MovieCard = props => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 640px)\"\n  });\n  const {\n    poster_path,\n    title,\n    vote_average,\n    id\n  } = props.movie;\n  let runtime;\n\n  if (props.movie.details) {\n    runtime = props.movie.details.runtime;\n  } else {\n    runtime = props.movie.runtime;\n  }\n\n  const imageURL = `https://image.tmdb.org/t/p/w780${poster_path}`;\n\n  const convertRuntime = num => {\n    let hours = num / 60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    return rhours + \"h \" + rminutes + \"m\";\n  };\n\n  const convertedRuntime = convertRuntime(runtime);\n  let renderRuntime;\n\n  if (!isMobile && runtime !== 0) {\n    renderRuntime = /*#__PURE__*/_jsxDEV(StyledRuntime, {\n      children: [/*#__PURE__*/_jsxDEV(RuntimeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), convertedRuntime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  let renderRating;\n\n  if (!isMobile && vote_average !== 0) {\n    renderRating = /*#__PURE__*/_jsxDEV(StyledRating, {\n      children: [/*#__PURE__*/_jsxDEV(RatingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), vote_average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledImg, {\n      src: poster_path ? imageURL : AltPoster,\n      onClick: () => props.handleMovieClick(id, path),\n      alt: `${title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), renderRuntime, renderRating, props.removeMode && /*#__PURE__*/_jsxDEV(RemoveFavoriteButton, {\n      onClick: () => props.removeFavorite(props.movie)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"q98ftPDy9c7T7ADgVqlQy+N2rXo=\", true, function () {\n  return [useRouteMatch];\n});\n\n_c = MovieCard;\n\nconst mapStateToProps = state => {\n  return {\n    removeMode: state.favorites.removeMode\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleMovieClick,\n  removeFavorite\n})(MovieCard); // export function MovieDetail (){\n//     const [detail, setDetail] = useState([]);\n//         useEffect(() => {\n//           fetchAPI();\n//         },[]);\n//         const fetchAPI = async (API) => {\n//           fetch(API)\n//           .then((res) => res.json())\n//           .then((data) => {\n//             console.log(data);\n//           setDetail(fetchMovieDetail(data.results));\n//           });\n//         }\n//       return(\n//         <p></p>\n//       );\n//         // return(\n//         //     <>\n//         //     <div className=\"aboutmovie\">\n//         //         <img src={IMG_API + detail.poster_path} alt={detail.title} />\n//         //         <div className=\"movie-info2\">\n//         //             <h3>{detail.title}</h3>\n//         //             <span className={`tag ${setVoteClass(detail.vote_average)}`}>\n//         //                 {detail.vote_average}</span>\n//         //         </div>\n//         //     </div></>\n//         // );\n// }\n// //export {MovieInfo}\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/Movieinfo.js"],"names":["Movie","React","useEffect","useState","fetchMovies","fetchMovieDetail","BrowserRouter","Router","Routes","Route","Link","useRouteMatch","useParams","IMG_API","FEATURED_API","IMAGE_API","SEARCH_API","GENRE_API","APIKey","setVoteClass","vote","MovieCard","props","path","isMobile","useMediaQuery","query","poster_path","title","vote_average","id","movie","runtime","details","imageURL","convertRuntime","num","hours","rhours","Math","floor","minutes","rminutes","round","convertedRuntime","renderRuntime","renderRating","AltPoster","handleMovieClick","removeMode","removeFavorite","mapStateToProps","state","favorites","connect"],"mappings":"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","sourcesContent":["\r\nimport '../App.css';\r\nimport {Movie} from '../Api/Movie';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\n//import axios from 'axios';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\r\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\"\r\nconst APIKey = '618a4d3048a1a1f797c014affaf110b4';\r\n\r\n\r\n\r\nconst setVoteClass = (vote) => {\r\n    // if(vote>= 8){\r\n    //     return 'green';\r\n    // }\r\n    // else if (vote>=6){\r\n    //     return 'orange';\r\n\r\n    // }else{\r\n    //     return 'red';\r\n    // }\r\n}\r\n\r\n\r\nconst MovieCard = (props) => {\r\n  const { path } = useRouteMatch();\r\n\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 640px)\" });\r\n\r\n  const { poster_path, title, vote_average, id } = props.movie;\r\n\r\n  let runtime;\r\n  if (props.movie.details) {\r\n    runtime = props.movie.details.runtime;\r\n  } else {\r\n    runtime = props.movie.runtime;\r\n  }\r\n\r\n  const imageURL = `https://image.tmdb.org/t/p/w780${poster_path}`;\r\n\r\n  const convertRuntime = (num) => {\r\n    let hours = num / 60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours) * 60;\r\n    let rminutes = Math.round(minutes);\r\n    return rhours + \"h \" + rminutes + \"m\";\r\n  };\r\n\r\n  const convertedRuntime = convertRuntime(runtime);\r\n\r\n  let renderRuntime;\r\n  if (!isMobile && runtime !== 0) {\r\n    renderRuntime = (\r\n      <StyledRuntime>\r\n        <RuntimeIcon />\r\n        {convertedRuntime}\r\n      </StyledRuntime>\r\n    );\r\n  }\r\n\r\n  let renderRating;\r\n  if (!isMobile && vote_average !== 0) {\r\n    renderRating = (\r\n      <StyledRating>\r\n        <RatingIcon />\r\n        {vote_average}\r\n      </StyledRating>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CardContainer>\r\n      <StyledImg\r\n        src={poster_path ? imageURL : AltPoster}\r\n        onClick={() => props.handleMovieClick(id, path)}\r\n        alt={`${title} poster`}\r\n      />\r\n      {renderRuntime}\r\n      {renderRating}\r\n      {props.removeMode && (\r\n        <RemoveFavoriteButton\r\n          onClick={() => props.removeFavorite(props.movie)}\r\n        />\r\n      )}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    removeMode: state.favorites.removeMode,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { handleMovieClick, removeFavorite })(\r\n  MovieCard\r\n);\r\n// export function MovieDetail (){\r\n\r\n\r\n  \r\n//     const [detail, setDetail] = useState([]);\r\n  \r\n//         useEffect(() => {\r\n//           fetchAPI();\r\n//         },[]);\r\n\r\n//         const fetchAPI = async (API) => {\r\n//           fetch(API)\r\n//           .then((res) => res.json())\r\n//           .then((data) => {\r\n//             console.log(data);\r\n//           setDetail(fetchMovieDetail(data.results));\r\n         \r\n//           });\r\n//         }\r\n\r\n//       return(\r\n//         <p></p>\r\n//       );\r\n\r\n    \r\n//         // return(\r\n//         //     <>\r\n//         //     <div className=\"aboutmovie\">\r\n\r\n//         //         <img src={IMG_API + detail.poster_path} alt={detail.title} />\r\n//         //         <div className=\"movie-info2\">\r\n\r\n//         //             <h3>{detail.title}</h3>\r\n//         //             <span className={`tag ${setVoteClass(detail.vote_average)}`}>\r\n//         //                 {detail.vote_average}</span>\r\n//         //         </div>\r\n\r\n//         //     </div></>\r\n\r\n        \r\n//         // );\r\n  \r\n// }\r\n\r\n\r\n// //export {MovieInfo}"]},"metadata":{},"sourceType":"module"}