{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moa\\\\desktop\\\\BioBuddy\\\\BioBuddy\\\\src\\\\Components\\\\Movieinfo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport Movie from '../Api/Movie';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\nimport Home from './Homepage';\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\"; //import axios from 'axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\";\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst setVoteClass = vote => {// if(vote>= 8){\n  //     return 'green';\n  // }\n  // else if (vote>=6){\n  //     return 'orange';\n  // }else{\n  //     return 'red';\n  // }\n};\n\nfunction MovieInfo(props) {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [CommentLists, setCommentLists] = useState([]);\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\n  const [ActorToggle, setActorToggle] = useState(false);\n  const movieVariable = {\n    movieId: movieId\n  };\n  useEffect(() => {\n    let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    fetchDetailInfo(endpointForMovieInfo); // axios.post('/api/comment/getComments', movieVariable)\n    //     .then(response => {\n    //         console.log(response)\n    //         if (response.data.success) {\n    //             console.log('response.data.comments', response.data.comments)\n    //             setCommentLists(response.data.comments)\n    //         } else {\n    //             alert('Failed to get comments Info')\n    //         }\n    //     })\n  }, []);\n\n  const toggleActorView = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  const fetchDetailInfo = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      console.log(result);\n      setMovie(result);\n      setLoadingForMovie(false);\n      let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      fetch(endpointForCasts).then(result => result.json()).then(result => {\n        console.log(result);\n        setCasts(result.cast);\n      });\n      setLoadingForCasts(false);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aboutmovie\",\n    children: Movie.length > 0 && Movie.map((movie, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Movie, {\n        movieId: movie.id,\n        image: movie.poster_path ? `${IMAGE_API}${movie.poster_path}` : null,\n        movieName: movie.original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 87\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 59\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieInfo, \"HVTbDqBF8xIs+zBkoFG79WAl1D0=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieInfo;\nexport default MovieInfo; // <>\n// <div className=\"aboutmovie\">\n//     <img src={IMG_API + '/'+  poster_path} alt={title} />\n//     <div className=\"movie-info2\">\n//         <h3>{title}</h3>\n//         <span className={`tag ${setVoteClass(vote_average)}`}>\n//             {vote_average}</span>\n//     </div>\n// </div></>\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["C:/Users/Moa/desktop/BioBuddy/BioBuddy/src/Components/Movieinfo.js"],"names":["Movie","React","useEffect","useState","ReactDOM","fetchMovies","fetchMovieDetail","Home","axios","useParams","IMG_API","FEATURED_API","IMAGE_API","SEARCH_API","GENRE_API","API_KEY","API_URL","setVoteClass","vote","MovieInfo","props","movieId","setMovie","Casts","setCasts","CommentLists","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","movieVariable","endpointForMovieInfo","fetchDetailInfo","toggleActorView","endpoint","fetch","then","result","json","console","log","endpointForCasts","cast","catch","error","length","map","movie","index","id","poster_path","original_title"],"mappings":"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","sourcesContent":["\r\nimport '../App.css';\r\nimport Movie from '../Api/Movie';\r\nimport React, {useEffect, useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { fetchMovies, fetchMovieDetail } from '../getdetail';\r\nimport Home from './Homepage';\r\n\r\nimport axios from 'axios';\r\nimport {useParams} from \"react-router-dom\"\r\n\r\n\r\n//import axios from 'axios';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst FEATURED_API =\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=618a4d3048a1a1f797c014affaf110b4&page=1\";\r\nconst IMAGE_API = \"https://image.tmdb.org/t/p/w1280/\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=618a4d3048a1a1f797c014affaf110b4&query=\";\r\nconst GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=618a4d3048a1a1f797c014affaf110b4&language=en-US\"\r\nconst API_KEY = '618a4d3048a1a1f797c014affaf110b4';\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\n\r\n\r\n\r\n\r\nconst setVoteClass = (vote) => {\r\n    // if(vote>= 8){\r\n    //     return 'green';\r\n    // }\r\n    // else if (vote>=6){\r\n    //     return 'orange';\r\n\r\n    // }else{\r\n    //     return 'red';\r\n    // }\r\n}\r\n\r\nfunction MovieInfo(props){\r\n\r\n const {movieId} = useParams();\r\n\r\n  const [Movie, setMovie] = useState([])\r\n  const [Casts, setCasts] = useState([])\r\n  const [CommentLists, setCommentLists] = useState([])\r\n  const [LoadingForMovie, setLoadingForMovie] = useState(true)\r\n  const [LoadingForCasts, setLoadingForCasts] = useState(true)\r\n  const [ActorToggle, setActorToggle] = useState(false)\r\n  const movieVariable = {\r\n      movieId: movieId\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n      let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n      fetchDetailInfo(endpointForMovieInfo)\r\n\r\n      // axios.post('/api/comment/getComments', movieVariable)\r\n      //     .then(response => {\r\n      //         console.log(response)\r\n      //         if (response.data.success) {\r\n      //             console.log('response.data.comments', response.data.comments)\r\n      //             setCommentLists(response.data.comments)\r\n      //         } else {\r\n      //             alert('Failed to get comments Info')\r\n      //         }\r\n      //     })\r\n\r\n  }, [])\r\n\r\n  const toggleActorView = () => {\r\n      setActorToggle(!ActorToggle)\r\n  }\r\n\r\n  const fetchDetailInfo = (endpoint) => {\r\n\r\n      fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n              console.log(result)\r\n              setMovie(result)\r\n              setLoadingForMovie(false)\r\n\r\n              let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n              fetch(endpointForCasts)\r\n                  .then(result => result.json())\r\n                  .then(result => {\r\n                      console.log(result)\r\n                      setCasts(result.cast)\r\n                  })\r\n\r\n              setLoadingForCasts(false)\r\n          })\r\n          .catch(error => console.error('Error:', error)\r\n          )\r\n  }\r\n  return(\r\n     \r\n    <div className=\"aboutmovie\">\r\n         \r\n         {Movie.length > 0 && Movie.map((movie, index) => <React.Fragment key={index}><Movie movieId={movie.id} image={movie.poster_path ?\r\n                                    `${IMAGE_API}${movie.poster_path}`\r\n                                    : null} movieName={movie.original_title}/></React.Fragment>\r\n          )}\r\n    </div>\r\n        \r\n        );\r\n  \r\n}\r\nexport default MovieInfo;\r\n\r\n\r\n\r\n// <>\r\n            // <div className=\"aboutmovie\">\r\n\r\n            //     <img src={IMG_API + '/'+  poster_path} alt={title} />\r\n            //     <div className=\"movie-info2\">\r\n\r\n            //         <h3>{title}</h3>\r\n            //         <span className={`tag ${setVoteClass(vote_average)}`}>\r\n            //             {vote_average}</span>\r\n            //     </div>\r\n\r\n            // </div></>"]},"metadata":{},"sourceType":"module"}